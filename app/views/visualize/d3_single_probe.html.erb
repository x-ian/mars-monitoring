<!DOCTYPE html>
<meta charset="utf-8">
<style>

.y.axis {
  font: 10px sans-serif;
}
.x.axis {
  font: 10px sans-serif;
}
.city {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  display: none;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>
<body>
	
<div class="page-header">
	<form class="form-inline">
		<%= form_tag("", :method => "get", :onsubmit => "return drawOnSubmit()") do %>
		<div class="form-group">
				<label class="control-label">Probe</label> 
				<%= select_tag 'probe_id', options_for_select(Probe.accessible_by(current_ability).select{|p| p.enabled?}.collect{|p| ["#{p.customer.name}: #{p.name} (#{p.location.name})", p.id] }.sort, @probe.id), :onchange => "drawOnSubmit();", :class => "form-control" %>
		</div>
		<div class="form-group">
			<label class="control-label">From</label> 
			<input id='start_date' name='start_date' type="date" class="form-control" value="<%= @start_date.strftime("%Y-%m-%d") %>">
		</div>
		<div class="form-group">
			<label class="control-label">To</label> 
			<input id='end_date' name='end_date' type="date" class="form-control" value="<%= (@end_date - 1.day).strftime("%Y-%m-%d") %>">
		</div>
		<div class="form-group">
			<%= submit_tag "Refresh", :class => 'btn btn-primary' %>
		</div>
		<% end %> 
	</form>
</div>

<span id="d333">

<script>

var margin = {top: 25, right: 130, bottom: 50, left: 70},
    width = $(window).width() - margin.left - margin.right - 250,
    height = $(window).height() - margin.top - margin.bottom - 100;

var parseDate = d3.time.format("%Y%m%d-%H%M%S").parse;

var x = d3.time.scale()
    .range([0, width]);

var y = d3.scale.linear()
    .range([height, 0]);

var color = d3.scale.category10();

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");

var line = d3.svg.line()
 //   .interpolate("basis")
    .x(function(d) { return x(d.date); })
    .y(function(d) { return y(d.value1); });

function draw() {

	d3.select("svg").remove();

    var svg = d3.select("#d333").append("span").append("svg")
  		.attr("width", width + margin.left + margin.right)  
		.attr("height", height + margin.top + margin.bottom)  
		.append("g")
		.attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

	var probe_id = document.getElementById('probe_id').value;
	var start_date = document.getElementById('start_date').value;
	var end_date = document.getElementById('end_date').value;

	d3.tsv("d3_data.tsv?probe_id=" + probe_id + "&start_date=" + start_date + "&end_date=" + end_date, function(error, data) {
  color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  data.forEach(function(d) {
    d.date = parseDate(d.date);
  });

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, value1: +d[name]};
      })
    };
  });

  x.domain(d3.extent(data, function(d) { return d.date; }));

  y.domain([
    d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.value1; }); }),
    d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.value1; }); })
  ]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis);

  var city = svg.selectAll(".city")
      .data(cities)
      .enter().append("g")
      .attr("class", "city");

  city.append("path")
      .attr("class", "line")
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  city.append("text")
      .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
      .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.value1) + ")"; })
      .attr("x", 3)
      .attr("dy", ".35em")
      .text(function(d) { return d.name; });
});
}

function drawOnSubmit() { 
	draw(); 
	return false; // make sure submit is not submitted...
} 

drawOnSubmit();

$(window).bind('resize', function() {
     location.reload();
});
</script>

</span>

<%= current_time_zone.html_safe %>

</body>